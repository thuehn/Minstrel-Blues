Index: backports-5.7-rc3-1/drivers/net/wireless/ath/ath9k/hw.c
===================================================================
--- backports-5.7-rc3-1.orig/drivers/net/wireless/ath/ath9k/hw.c
+++ backports-5.7-rc3-1/drivers/net/wireless/ath/ath9k/hw.c
@@ -3063,6 +3063,25 @@ void ath9k_hw_set_txpowerlimit(struct at
 }
 EXPORT_SYMBOL(ath9k_hw_set_txpowerlimit);
 
+void ath9k_hw_set_ack_txpower(struct ath_hw *ah, s8 ack_txpower)
+{
+	struct ath_regulatory *reg = ath9k_hw_regulatory(ah);
+	u32 tpc;
+
+	if (ack_txpower > MAX_RATE_POWER / 2)
+		ack_txpower = MAX_RATE_POWER / 2;
+	if (ack_txpower > reg->power_limit / 2)
+		ack_txpower = reg->power_limit / 2;
+
+	tpc = REG_READ(ah, AR_TPC);
+	tpc &= ~(AR_TPC_CHIRP | AR_TPC_CTS | AR_TPC_ACK);
+	tpc |= SM(ack_txpower, AR_TPC_CHIRP) |
+		SM(ack_txpower, AR_TPC_CTS) |
+		SM(ack_txpower, AR_TPC_ACK);
+	REG_WRITE(ah, AR_TPC, tpc);
+}
+EXPORT_SYMBOL(ath9k_hw_set_ack_txpower);
+
 void ath9k_hw_setopmode(struct ath_hw *ah)
 {
 	ath9k_hw_set_operating_mode(ah, ah->opmode);
Index: backports-5.7-rc3-1/drivers/net/wireless/ath/ath9k/hw.h
===================================================================
--- backports-5.7-rc3-1.orig/drivers/net/wireless/ath/ath9k/hw.h
+++ backports-5.7-rc3-1/drivers/net/wireless/ath/ath9k/hw.h
@@ -1065,6 +1065,7 @@ void ath9k_hw_setrxfilter(struct ath_hw
 bool ath9k_hw_phy_disable(struct ath_hw *ah);
 bool ath9k_hw_disable(struct ath_hw *ah);
 void ath9k_hw_set_txpowerlimit(struct ath_hw *ah, u32 limit, bool test);
+void ath9k_hw_set_ack_txpower(struct ath_hw *ah, s8 ack_txpower);
 void ath9k_hw_setopmode(struct ath_hw *ah);
 void ath9k_hw_setmcastfilter(struct ath_hw *ah, u32 filter0, u32 filter1);
 void ath9k_hw_write_associd(struct ath_hw *ah);
Index: backports-5.7-rc3-1/drivers/net/wireless/ath/ath9k/main.c
===================================================================
--- backports-5.7-rc3-1.orig/drivers/net/wireless/ath/ath9k/main.c
+++ backports-5.7-rc3-1/drivers/net/wireless/ath/ath9k/main.c
@@ -1473,6 +1473,10 @@ static int ath9k_config(struct ieee80211
 		ath_chanctx_set_channel(sc, ctx, &hw->conf.chandef);
 	}
 
+	/* Handle tx power changes for ACK packets*/
+       if (changed & IEEE80211_CONF_CHANGE_ACK_TXPOWER)
+               ath9k_hw_set_ack_txpower(ah, conf->ack_txpower);
+
 	if (changed & IEEE80211_CONF_CHANGE_POWER)
 		ath9k_set_txpower(sc, NULL);
 
