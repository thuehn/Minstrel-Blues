Index: backports-5.4.27-1/net/mac80211/rc80211_minstrel_debugfs.c
===================================================================
--- backports-5.4.27-1.orig/net/mac80211/rc80211_minstrel_debugfs.c
+++ backports-5.4.27-1/net/mac80211/rc80211_minstrel_debugfs.c
@@ -61,6 +61,7 @@ minstrel_stats_open(struct inode *inode,
 	struct minstrel_debugfs_info *ms;
 	unsigned int i, tp_max, tp_avg, eprob;
 	char *p;
+	struct timeval tv;
 
 	ms = kmalloc(2048, GFP_KERNEL);
 	if (!ms)
@@ -105,10 +106,11 @@ minstrel_stats_open(struct inode *inode,
 				mrs->succ_hist,
 				mrs->att_hist);
 	}
+	do_gettimeofday(&tv);
 	p += sprintf(p, "\nTotal packet count::    ideal %d      "
-			"lookaround %d\n\n",
+			"lookaround %d,    timestamp: %ld.%.6ld\n\n",
 			mi->total_packets - mi->sample_packets,
-			mi->sample_packets);
+			mi->sample_packets, tv.tv_sec, tv.tv_usec);
 	ms->len = p - ms->buf;
 
 	WARN_ON(ms->len + sizeof(*ms) > 2048);
@@ -123,6 +125,7 @@ minstrel_stats_csv_open(struct inode *in
 	struct minstrel_debugfs_info *ms;
 	unsigned int i, tp_max, tp_avg, eprob;
 	char *p;
+	struct timeval tv;
 
 	ms = kmalloc(2048, GFP_KERNEL);
 	if (!ms)
@@ -130,10 +133,12 @@ minstrel_stats_csv_open(struct inode *in
 
 	file->private_data = ms;
 	p = ms->buf;
+	do_gettimeofday(&tv);
 
 	for (i = 0; i < mi->n_rates; i++) {
 		struct minstrel_rate *mr = &mi->r[i];
 		struct minstrel_rate_stats *mrs = &mi->r[i].rc_stats;
+		p += sprintf(p, "%ld.%.6ld,", tv.tv_sec, tv.tv_usec);
 
 		p += sprintf(p, "%s" ,((i == mi->max_tp_rate[0]) ? "A" : ""));
 		p += sprintf(p, "%s" ,((i == mi->max_tp_rate[1]) ? "B" : ""));
Index: backports-5.4.27-1/net/mac80211/rc80211_minstrel_ht_debugfs.c
===================================================================
--- backports-5.4.27-1.orig/net/mac80211/rc80211_minstrel_ht_debugfs.c
+++ backports-5.4.27-1/net/mac80211/rc80211_minstrel_ht_debugfs.c
@@ -123,6 +123,7 @@ minstrel_ht_stats_open(struct inode *ino
 	struct minstrel_ht_sta_priv *msp = inode->i_private;
 	struct minstrel_ht_sta *mi = &msp->ht;
 	struct minstrel_debugfs_info *ms;
+	struct timeval tv;
 	unsigned int i;
 	int ret;
 	char *p;
@@ -161,6 +162,8 @@ minstrel_ht_stats_open(struct inode *ino
 		p += sprintf(p, "Average # of aggregated frames per A-MPDU: %d.%d\n",
 			MINSTREL_TRUNC(mi->avg_ampdu_len),
 			MINSTREL_TRUNC(mi->avg_ampdu_len * 10) % 10);
+	do_gettimeofday(&tv);
+	p += sprintf(p, "Timestamp: %ld.%.6ld\n", tv.tv_sec, tv.tv_usec);
 	ms->len = p - ms->buf;
 	WARN_ON(ms->len + sizeof(*ms) > 32768);
 
@@ -176,7 +179,8 @@ static const struct file_operations mins
 };
 
 static char *
-minstrel_ht_stats_csv_dump(struct minstrel_ht_sta *mi, int i, char *p)
+minstrel_ht_stats_csv_dump(struct minstrel_ht_sta *mi, int i, char *p,
+			   struct timeval tv)
 {
 	const struct mcs_group *mg;
 	unsigned int j, tp_max, tp_avg, eprob, tx_time;
@@ -206,6 +210,8 @@ minstrel_ht_stats_csv_dump(struct minstr
 		if (!(mi->supported[i] & BIT(j)))
 			continue;
 
+		p += sprintf(p, "%ld.%.6ld,", tv.tv_sec, tv.tv_usec);
+
 		if (gflags & IEEE80211_TX_RC_MCS) {
 			p += sprintf(p, "HT%c0,", htmode);
 			p += sprintf(p, "%cGI,", gimode);
@@ -273,6 +279,7 @@ minstrel_ht_stats_csv_open(struct inode
 	struct minstrel_ht_sta_priv *msp = inode->i_private;
 	struct minstrel_ht_sta *mi = &msp->ht;
 	struct minstrel_debugfs_info *ms;
+	struct timeval tv;
 	unsigned int i;
 	int ret;
 	char *p;
@@ -292,12 +299,13 @@ minstrel_ht_stats_csv_open(struct inode
 	file->private_data = ms;
 
 	p = ms->buf;
+	do_gettimeofday(&tv);
 
-	p = minstrel_ht_stats_csv_dump(mi, MINSTREL_CCK_GROUP, p);
+	p = minstrel_ht_stats_csv_dump(mi, MINSTREL_CCK_GROUP, p, tv);
 	for (i = 0; i < MINSTREL_CCK_GROUP; i++)
-		p = minstrel_ht_stats_csv_dump(mi, i, p);
+		p = minstrel_ht_stats_csv_dump(mi, i, p, tv);
 	for (i++; i < ARRAY_SIZE(mi->groups); i++)
-		p = minstrel_ht_stats_csv_dump(mi, i, p);
+		p = minstrel_ht_stats_csv_dump(mi, i, p, tv);
 
 	ms->len = p - ms->buf;
 	WARN_ON(ms->len + sizeof(*ms) > 32768);
