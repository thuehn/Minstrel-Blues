Index: backports-5.4.27-1/net/mac80211/rc80211_minstrel.c
===================================================================
--- backports-5.4.27-1.orig/net/mac80211/rc80211_minstrel.c
+++ backports-5.4.27-1/net/mac80211/rc80211_minstrel.c
@@ -160,6 +160,14 @@ minstrel_update_rates(struct minstrel_pr
 	ratetbl->rate[i].count_cts = mp->max_retry;
 	ratetbl->rate[i].count_rts = mp->max_retry;
 
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	/* use fixed txpower if set */
+	if (mi->fixed_txpower != 255) {
+		for (i = 0; i < ARRAY_SIZE(ratetbl->rate); i++)
+			ratetbl->rate[i].txpower = mi->fixed_txpower;
+	}
+#endif
+
 	rate_control_set_rates(mp->hw, mi->sta, ratetbl);
 }
 
@@ -258,9 +266,13 @@ minstrel_update_stats(struct minstrel_pr
 #ifdef CPTCFG_MAC80211_DEBUGFS
 	/* use fixed index if set */
 	if (mp->fixed_rate_idx != -1) {
-		mi->max_tp_rate[0] = mp->fixed_rate_idx;
-		mi->max_tp_rate[1] = mp->fixed_rate_idx;
+		for (i = 0; i < 4; i++)
+			mi->max_tp_rate[i] = mp->fixed_rate_idx;
 		mi->max_prob_rate = mp->fixed_rate_idx;
+	} else if (mi->fixed_txrate != -1) {
+		for (i = 0; i < 4; i++)
+			mi->max_tp_rate[i] = mi->fixed_txrate;
+		mi->max_prob_rate = mi->fixed_txrate;
 	}
 #endif
 
@@ -373,8 +385,12 @@ minstrel_get_rate(void *priv, struct iee
 	}
 
 #ifdef CPTCFG_MAC80211_DEBUGFS
-	if (mp->fixed_rate_idx != -1)
+	if ((mp->fixed_rate_idx != -1) || (mi->fixed_txrate != -1)) {
+		/* use fixed txpower for rate sampling packets if set */
+		if (mi->fixed_txpower != 255)
+			info->control.txpower = mi->fixed_txpower;
 		return;
+	}
 #endif
 
 	/* Don't use EAPOL frames for sampling on non-mrr hw */
Index: backports-5.4.27-1/net/mac80211/rc80211_minstrel.h
===================================================================
--- backports-5.4.27-1.orig/net/mac80211/rc80211_minstrel.h
+++ backports-5.4.27-1/net/mac80211/rc80211_minstrel.h
@@ -137,6 +137,11 @@ struct minstrel_sta_info {
 
 	/* sampling table */
 	u8 *sample_table;
+
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	u8 fixed_txpower;
+	u32 fixed_txrate;
+#endif
 };
 
 struct minstrel_priv {
Index: backports-5.4.27-1/net/mac80211/rc80211_minstrel_ht.c
===================================================================
--- backports-5.4.27-1.orig/net/mac80211/rc80211_minstrel_ht.c
+++ backports-5.4.27-1/net/mac80211/rc80211_minstrel_ht.c
@@ -632,6 +632,9 @@ minstrel_ht_update_stats(struct minstrel
 	int index, group, i, j, cur_prob;
 	u16 tmp_mcs_tp_rate[MAX_THR_RATES], tmp_group_tp_rate[MAX_THR_RATES];
 	u16 tmp_cck_tp_rate[MAX_THR_RATES];
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	struct minstrel_ht_sta_priv *msp;
+#endif
 
 	mi->sample_mode = MINSTREL_SAMPLE_IDLE;
 
@@ -732,11 +735,16 @@ minstrel_ht_update_stats(struct minstrel
 
 #ifdef CPTCFG_MAC80211_DEBUGFS
 	/* use fixed index if set */
+	msp = container_of(mi, struct minstrel_ht_sta_priv, ht);
 	if (mp->fixed_rate_idx != -1) {
 		for (i = 0; i < 4; i++)
 			mi->max_tp_rate[i] = mp->fixed_rate_idx;
 		mi->max_prob_rate = mp->fixed_rate_idx;
 		mi->sample_mode = MINSTREL_SAMPLE_IDLE;
+	} else if (msp->fixed_txrate != -1) {
+		for (i = 0; i < 4; i++)
+			mi->max_tp_rate[i] = msp->fixed_txrate;
+		mi->max_prob_rate = msp->fixed_txrate;
 	}
 #endif
 
@@ -818,7 +826,9 @@ minstrel_ht_downgrade_rate(struct minstr
 	int tmp_group, tmp_flags, tmp_streams;
 
 #ifdef CPTCFG_MAC80211_DEBUGFS
-	if (mp->fixed_rate_idx != -1)
+	struct minstrel_ht_sta_priv *msp;
+	msp = container_of(mi, struct minstrel_ht_sta_priv, ht);
+	if ((mp->fixed_rate_idx != -1) || (msp->fixed_txrate != -1))
 		return;
 #endif
 
@@ -1203,6 +1213,9 @@ minstrel_ht_update_rates(struct minstrel
 	s8 txpower;
 	u16 first_rate = mi->max_tp_rate[0];
 	int i = 0;
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	struct minstrel_ht_sta_priv *msp;
+#endif
 
 	if (mi->sample_mode == MINSTREL_SAMPLE_ACTIVE)
 		first_rate = mi->sample_rate;
@@ -1232,6 +1245,16 @@ minstrel_ht_update_rates(struct minstrel
 
 	mi->sta->max_rc_amsdu_len = minstrel_ht_get_max_amsdu_len(mi);
 	rates->rate[i].idx = -1;
+
+#ifdef CPTCFG_MAC80211_DEBUGFS
+        /* use fixed txpower if set */
+	msp = container_of(mi, struct minstrel_ht_sta_priv, ht);
+        if (msp->fixed_txpower != 255) {
+		for (i = 0; i < ARRAY_SIZE(rates->rate); i++)
+			rates->rate[i].txpower = msp->fixed_txpower;
+	}
+#endif
+
 	rate_control_set_rates(mp->hw, mi->sta, rates);
 }
 
@@ -1355,8 +1378,12 @@ minstrel_ht_get_rate(void *priv, struct
 	info->flags |= mi->tx_flags;
 
 #ifdef CPTCFG_MAC80211_DEBUGFS
-	if (mp->fixed_rate_idx != -1)
+	if ((mp->fixed_rate_idx != -1) || (msp->fixed_txrate != -1)) {
+		/* use fixed txpower for rate sampling packets if set */
+		if (msp->fixed_txpower != 255)
+			info->control.txpower = msp->fixed_txpower;
 		return;
+	}
 #endif
 
 	/* Don't use EAPOL frames for sampling on non-mrr hw */
@@ -1580,6 +1607,10 @@ use_legacy:
 	memset(&msp->legacy, 0, sizeof(msp->legacy));
 	msp->legacy.r = msp->ratelist;
 	msp->legacy.sample_table = msp->sample_table;
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	msp->legacy.fixed_txpower = (u8) -1;
+	msp->legacy.fixed_txrate = (u32) -1;
+#endif
 	return mac80211_minstrel.rate_init(priv, sband, chandef, sta,
 					   &msp->legacy);
 }
@@ -1629,6 +1660,11 @@ minstrel_ht_alloc_sta(void *priv, struct
 	if (!msp->sample_table)
 		goto error1;
 
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	msp->fixed_txpower = (u8) -1;
+	msp->fixed_txrate = (u32) -1;
+#endif
+
 	return msp;
 
 error1:
Index: backports-5.4.27-1/net/mac80211/rc80211_minstrel_ht.h
===================================================================
--- backports-5.4.27-1.orig/net/mac80211/rc80211_minstrel_ht.h
+++ backports-5.4.27-1/net/mac80211/rc80211_minstrel_ht.h
@@ -112,6 +112,10 @@ struct minstrel_ht_sta_priv {
 		struct minstrel_ht_sta ht;
 		struct minstrel_sta_info legacy;
 	};
+#ifdef CPTCFG_MAC80211_DEBUGFS
+	u8 fixed_txpower;
+	u32 fixed_txrate;
+#endif
 	void *ratelist;
 	void *sample_table;
 	bool is_ht;
